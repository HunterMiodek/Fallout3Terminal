#!/usr/bin/env bash

BASE_DIR="$(cd "$(dirname "$0")"; pwd)" || exit 2

IFS=$'\n'
entrylist=('Go Back')
rawentry="$(find $BASE_DIR/entries -type f)"
for i in $rawentry; do
    i=${i##*/}
    entrylist+=("$i")
done

COLUMNS=12

# Define the correct password
CORRECT_PASSWORD="Liberty"

# Function to display the top header in a centered alignment!
display_center() {
    columns="$(tput cols)"
    while IFS= read -r line; do
        printf "%*s\n" $(( (${#line} + columns) / 2)) "$line"
    done < "$1"
}

# This string is to be displayed as a custom "title header" at the top
greeter=$'
Personal Terminal
___________________________________________________'

# Function for login
login_func() {
    while true; do
        clear
        echo "Please enter the password to access the terminal:"
        read -s -p "Password: " entered_password
        echo

        # Check if the entered password matches the correct password
        if [[ "$entered_password" == "$CORRECT_PASSWORD" ]]; then
            echo "Login successful!"
            sleep 1
            return
        else
            echo "Incorrect password. Please try again."
            sleep 1
        fi
    done
}

# Function to change the password
change_password_func() {
    clear
    read -s -p "Enter new password: " new_password
    echo
    read -s -p "Confirm new password: " confirm_password
    echo

    if [[ "$new_password" == "$confirm_password" ]]; then
        CORRECT_PASSWORD="$new_password"
        echo "Password changed successfully!"
    else
        echo "Passwords do not match. Try again."
    fi
    sleep 2
    repeatmainmenufunc
}

# Function to display the calendar
view_calendar() {
    clear
    echo "$greeter"
    echo "Calendar"
    echo "========="
    play -q "$BASE_DIR/ui_hacking_charscroll.wav"

    # Display the current month's calendar
    cal

    # Add events or view events for the specific day
    echo "What would you like to do?"
    echo "1. Add an event for today"
    echo "2. View events for today"
    echo "3. Go back"

    read -p "Choose an option: " calendar_choice
    case $calendar_choice in
        1) add_event ;;
        2) view_event ;;
        3) repeatmainmenufunc ;;
        *) echo "Invalid option." && sleep 1 && view_calendar ;;
    esac
}

# Function to add an event
add_event() {
    clear
    echo "$greeter"
    echo "Add Event"
    echo "========="
    read -p "Enter the event description: " event_description
    today=$(date +%Y-%m-%d)
    echo "$event_description" >> "$BASE_DIR/entries/$today.txt"
    echo "Event added for $today."
    sleep 2
    view_calendar
}

# Function to view events for a specific date
view_event() {
    clear
    echo "$greeter"
    echo "View Events"
    echo "==========="
    today=$(date +%Y-%m-%d)
    if [[ -f "$BASE_DIR/entries/$today.txt" ]]; then
        echo "Events for $today:"
        cat "$BASE_DIR/entries/$today.txt"
    else
        echo "No events for $today."
    fi
    read -p "Press enter to continue..."
    view_calendar
}

# Main Menu Screen
mainmenufunc() {
    clear

    # Display the Menu text
    play -q "$BASE_DIR/ui_hacking_charscroll.wav"
    display_center "$BASE_DIR/greeterheader.txt" | pv -qL 80
    echo "$greeter" | pv -qL 80
    play -q "$BASE_DIR/ui_hacking_charscroll.wav"
    echo "What would you like to do?" | pv -qL 80

    # Display the menu options
    COLUMNS=12
    select menuchoice in "View Journal Entries" "Log a Journal Entry" "Delete a Journal Entry" "Change Password" "View Calendar" "Proceed to Desktop"
    do
        case $menuchoice in
            "View Journal Entries")
                play -q "$BASE_DIR/ui_hacking_charenter_01.wav"
                viewentriesfunc
                ;;
            "Log a Journal Entry")
                play -q "$BASE_DIR/ui_hacking_charenter_01.wav"
                writeentryfunc
                ;;
            "Delete a Journal Entry")
                play -q "$BASE_DIR/ui_hacking_charenter_01.wav"
                deleteentryfunc
                ;;
            "Change Password")
                play -q "$BASE_DIR/ui_hacking_charenter_01.wav"
                change_password_func
                ;;
            "View Calendar")
                play -q "$BASE_DIR/ui_hacking_charenter_01.wav"
                view_calendar
                ;;
            "Proceed to Desktop")
                play -q "$BASE_DIR/ui_hacking_charenter_01.wav"
                echo "Goodbye!" && exit
                ;;
            *)
                play -q "$BASE_DIR/ui_hacking_passbad.wav"
                ;;
        esac
    done
}

# Option 1 Menu, Viewing Journal Entries
viewentriesfunc() {
    # Adding all the text files as individual strings to be used as a selection menu
    entrylist=('Go Back')
    rawentry="$(find $BASE_DIR/entries -type f)"
    for i in $rawentry; do
        i=${i##*/}
        entrylist+=("$i")
    done

    # Display the Menu text
    clear
    display_center "$BASE_DIR/greeterheader.txt"
    echo "$greeter"
    play -q "$BASE_DIR/ui_hacking_charscroll.wav"
    echo "Which Journal Entry would you like to access?" | pv -qL 80

    # Display the menu options
    COLUMNS=12
    select readoption in ${entrylist[@]}
    do
        case $readoption in
            "Go Back")
                play -q "$BASE_DIR/ui_hacking_charenter_01.wav"
                repeatmainmenufunc
                ;;
            *)
                play -q "$BASE_DIR/ui_hacking_charenter_01.wav"
                ;;
        esac

        # Displays the selected entry
        clear
        display_center "$BASE_DIR/greeterheader.txt"
        echo "$greeter"
        echo
        play -q "$BASE_DIR/ui_hacking_charscroll.wav"
        echo "$readoption:" | pv -qL 80
        play -q "$BASE_DIR/ui_hacking_charscroll.wav"
        cat < "$BASE_DIR/entries/$readoption" | pv -qL 80
        echo
        read -p "Press enter to continue"
        play -q "$BASE_DIR/ui_hacking_charenter_01.wav"

        # Goes back to main menu
        repeatmainmenufunc
    done
}

# Menu for writing an entry
writeentryfunc() {
    # Displays menu text
    clear
    display_center "$BASE_DIR/greeterheader.txt"
    echo "$greeter"
    play -q "$BASE_DIR/ui_hacking_charscroll.wav"
    echo "What would you like to name the entry?" | pv -qL 80

    # Reads user input
    read entrynameinput 
    play -q "$BASE_DIR/ui_hacking_charenter_01.wav"

    # Displays menu text again
    clear
    display_center "$BASE_DIR/greeterheader.txt"
    echo "$greeter" 
    play -q "$BASE_DIR/ui_hacking_charscroll.wav"
    echo "Press CTRL+D to finalize entry" | pv -qL 80
    play -q "$BASE_DIR/ui_hacking_charscroll.wav"
    echo "$entrynameinput:" | pv -qL 80
    echo
    # Uses cat text editor to write entries. Ctrl+D to finish
    cat >"$BASE_DIR/entries/$entrynameinput"
    cat "$BASE_DIR/entries/$entrynameinput"
    clear
    play -q "$BASE_DIR/ui_hacking_charenter_01.wav"

    # Returns to main menu
    repeatmainmenufunc
}

# Menu to delete an entry
deleteentryfunc() {
    # Adding all the text files as individual strings to be used as a selection menu
    entrylist=('Go Back')
    rawentry="$(find $BASE_DIR/entries -type f)"
    for i in $rawentry; do
        i=${i##*/}
        entrylist+=("$i")
    done

    # Displays menu text
    clear
    display_center "$BASE_DIR/greeterheader.txt"
    echo "$greeter" 
    play -q "$BASE_DIR/ui_hacking_charscroll.wav"
    echo "Which Journal Entry would you like to delete?" | pv -qL 80

    # Displays menu options
    COLUMNS=12
    select readoption in ${entrylist[@]}
    do
        case $readoption in
            "Go Back")
                play -q "$BASE_DIR/ui_hacking_charenter_01.wav"
                repeatmainmenufunc
                ;;
            *)
                play -q "$BASE_DIR/ui_hacking_charenter_01.wav"
                ;;
        esac

        # Displays menu text again
        clear
        display_center "$BASE_DIR/greeterheader.txt"
        echo "$greeter"
        echo
        play -q "$BASE_DIR/ui_hacking_charscroll.wav"
        echo "Delete $readoption? Type YES to continue" | pv -qL 80
        play -q "$BASE_DIR/ui_hacking_charscroll.wav"

        # Detects user input if they typed in "yes"
        read confirmdeletion
        if [[ ${confirmdeletion^^} == "YES" ]]; then
            rm -f "$BASE_DIR/entries/$readoption"
            play -q "$BASE_DIR/ui_hacking_charenter_01.wav"
            echo "FILE DELETED!"
            play -q "$BASE_DIR/ui_hacking_passgood.wav"
            sleep 0.1
            repeatmainmenufunc
        else
            echo "OPERATION CANCELLED"
            play -q "$BASE_DIR/ui_hacking_charenter_01.wav"
            play -q "$BASE_DIR/ui_hacking_passbad.wav"
            sleep 0.2

            # Goes back to main menu
            repeatmainmenufunc
        fi
    done
}

# Function for repeating the main menu
repeatmainmenufunc() {
    clear
    display_center "$BASE_DIR/greeterheader.txt"
    echo "$greeter" 
    play -q "$BASE_DIR/ui_hacking_charscroll.wav"
    echo "What would you like to do?" | pv -qL 80
    COLUMNS=12
    select menuchoice in "View Journal Entries" "Log a Journal Entry" "Delete a Journal Entry" "Change Password" "View Calendar" "Proceed to Desktop"
    do
        case $menuchoice in
            "View Journal Entries")
                play -q "$BASE_DIR/ui_hacking_charenter_01.wav"
                viewentriesfunc
                ;;
            "Log a Journal Entry")
                play -q "$BASE_DIR/ui_hacking_charenter_01.wav"
                writeentryfunc
                ;;
            "Delete a Journal Entry")
                play -q "$BASE_DIR/ui_hacking_charenter_01.wav"
                deleteentryfunc
                ;;
            "Change Password")
                play -q "$BASE_DIR/ui_hacking_charenter_01.wav"
                change_password_func
                ;;
            "View Calendar")
                play -q "$BASE_DIR/ui_hacking_charenter_01.wav"
                view_calendar
                ;;
            "Proceed to Desktop")
                play -q "$BASE_DIR/ui_hacking_charenter_01.wav"
                echo "Goodbye!" && exit
                ;;
            *)
                play -q "$BASE_DIR/ui_hacking_passbad.wav"
                ;;
        esac
    done
}

# Some random aesthetic startup junk
clear
play -q "$BASE_DIR/ui_hacking_charscroll.wav"
echo "Initializing system boot..." | pv -qL 80
sleep 0.4
play -q "$BASE_DIR/ui_hacking_charscroll.wav"
echo "Loading Federal Terminal OS..." | pv -qL 80
sleep 0.4
play -q "$BASE_DIR/ui_hacking_charscroll.wav"
echo "64K RAM detected..." | pv -qL 80
sleep 0.4
play -q "$BASE_DIR/ui_hacking_charscroll.wav"
echo "Hard Disk Drive recommended..." | pv -qL 80
sleep 0.4
play -q "$BASE_DIR/ui_hacking_charscroll.wav"
echo "Launching Interface..." | pv -qL 80
sleep 0.4
clear
echo $'
 _  _  ____  __     ___  __   _  _  ____ 
/ )( \(  __)(  )   / __)/  \ ( \/ )(  __)
\ /\ / ) _) / (_/\( (__(  O )/ \/ \ ) _) 
(_/\_)(____)\____/ \___)\__/ \_)(_/(____)
'

echo "==============================================" | pv -qL 50
play -q "$BASE_DIR/ui_hacking_passgood.wav"
sleep 1

# Call the login function first
login_func

# Go to the main menu
mainmenufunc
